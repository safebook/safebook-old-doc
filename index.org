#+TITLE: Encore un autre réseau social
#+HTML_HEAD: <link href="solarized-light.min.css" rel="stylesheet"></link>
#+OPTIONS: num:nil

** Introduction

    L'arrivée d'internet annonce la société virtuelle.
    
    Cette nouvel espace permet l'émergence de nouvelles structures.

    Une structure particulièrement vivace - le sujet de cette reflexion - c'est le réseau social.

    Il est assujetti à de nouvelles règles: les protocoles et les interfaces.

    Son potentiel est immense. Il organiser le réél, et peut être un tremplin pour l'action.


** Propriétés utiles des messages

*** Privé (Chiffrement)

    Un chiffrement cryptographique garanti que seul les possesseurs de la clé de déchiffrement pouront le lire.

    Il permet de ne pas avoir à confier à un tiers la gestion de l'accès à l'information.


*** Authenticité (Signature)

    Une signature cryptographique prouve que le message a bien été envoyé par l'utilisateur.

    Elle permet de se passer d'un tiers pour garantir l'authenticité des données.

    
** Propriétés utiles des réseaux

*** Trustless
    
    Nous ne devrions pas avoir besoin de faire confiance au serveur
    pour ne pas lire et analyser nos message.
    
    Il devrait donc être impossible à un tiers de lire, ou modifier
    notre flux de communication. Pour cela nous utiliseront la cryptographie.

    Les données chiffrés devraient pouvoir être ouvertes à tous
    sans que cela puisse nous compromettre.


*** Trustfull

    C'est un outil permettant à la platforme de reconnaitre ses utilisateurs.
    
    Nous n'avons pas besoin que l'utilisateur en choisisse un car il est déjà
    uniquement identifiable par son adresse cryptographique.

    Il est seulement intéressant pour l'utilisateur de choisir sous quel nom il apparait par défaut



*** Décentralised
   
   Réseau décentralisé ou distribué.

   Les données appartiennent aux utilisateur et sont à proxmité d'eux.
   
   Les données sont naturellement stockées par l'utilisateur et par les noeuds les plus proches.
   
   Les moyens de redondances de prédilection suivent le graphe social (gossip)
   ou sont stocké par un ou plusieurs serveurs (décentralisation).


*** Sans mot de passe

    Le mot de passe est juste un outil permettant à la platforme de reconnaitre ses utilisateurs.

    Nous préférons une signature cryptographie ou un mot de passe à usage unique
    pour ne pas embarasser l'utilisateur d'avoir à se souvenir d'un mot de passe
    different pour chaque platforme qu'il utilise.


** Types d'adresses

  - Clé publique
  - Empreinte de clé publique (ex: SFGAftzSTztFSB8LMwsrdCKTyqGY6zr3sU).
    Est plus court qu'une clé publique, et ne la divulgue pas.
  - Pseudo grace avec un système de 'DNS'


** Types d'encodages
  
  - Binary
  - Base58
  - Suite de mots (ex: give input convince decide dizzy tag flash spawn)
  - QR Code


** Types de messages
  
  - En clair: contenu public
  - Signé
    Message vers une *clé de vérification* (généralement associée à un utilisateur) et une *signature cryptographique* le rendant authentifiable
  - Direct: Message to public key (M2PK)
    Message vers une *clé de déchiffrement asymétrique* permettant de le déchiffrer.
  - Multiple: Message to public key (M2PK1PK2PK3...)
    Message vers plusieurs *clé de déchiffrement asymétrique* permettant de le déchiffrer.
  - Satoshi: Message to public key hash (M2PKH)
    Message vers une *empreinte d'adresse publique*, c'est à dire l'*empreinte* de la *clé de déchiffrement asymétrique* permettant de le déchiffrer.
  - Zero: pas de métadata (exemples: bitmessage, minilock)
    Un message avec *zero information* est complétement illisible avant d'être dechiffré.
    Aucune information n'est disponible pour savoir quelle clé peut le déchiffrer.

  
** Types d'objets
   
*** Utilisateur

    C'est l'avatar d'un utilisateur sur la platforme.

    C'est un noeud d'authorité du graphe.


*** Message
    
    C'est le ciment du réseau social et sa fonction.

    (Un message est aussi un noeud du graphe, il peut être la destination pour d'autres messages.)


*** Evenement et communautés

    Ce sont des singularités du réseau.

    Ils contiennent et se contenu par d'autres noeuds, des utilsateurs, messages, événements, communautés, ...


** Techniques cryptographiques
    
**** Fonction de hachage

    Une fonction de hachage cryptographie donne l'*empreinte cryptographique* d'un message.
    
    L'empreinte cryptographique est suffisament longue et cryptique pour avoir ces deux propriétés :

    Aucun autre message calculable n'a la même empreinte cryptographique.
    
    Il n'est pas possible de retrouver le message seulement à partir de son empreinte.


**** Clés de chiffrement (symétrique)
    
    Une *clé cryptographique* est un moyen de chiffrer (crypter) ou de déchiffrer des données.
    
    Une clé de chiffrement et de déchiffrement est dite *symétrique*.

    Ses possesseurs forment le groupe pouvant lire les messages chiffrés.
    

**** Clé de chiffrement (asymétrique)

    Une *clé de chiffrement asymétrique* permet de chiffrer des messages mais pas de les déchiffrer.

    La *clé de déchiffrement* permet de génerer la *clé de chiffrement* correspondante.

    Ses possesseurs peuvent donc uniquement chiffrer des messages, sans pouvoir les relire.

    Seul le (ou les) possesseur(s) de la *clé de déchiffrement* correspondante a(ont) le pouvoir de les lire.

    
**** Clé de signature (asymétrique)

    Une *clé de signature cryptographique* de permet d'authentifier un message.
    
    Elle permet aussi de générer la *clé de verification cryptographique* correspondante.
    
    La *clé de vérification* peut être partagée afin de rendre possible la vérifaction des messages signés.


**** Arbre cryptographique

    Un *arbre cryptographique* utilise une *graine cryptographique* pour générer
    un ensemble de branches et feuilles qui peuvent toutes être utilisés comme *clés cryptographiques*
    
    Un graine cryptographique peut générer un arbre informatique infini d'adresses et de clés.
    
    Certaines clés peuvent servir à destocker (en dechiffrant) certaines informations chiffrés.

    Certaines clés peuvent servir pour bitcoin, litecoin, etc...
    
    En partageant une graine cryptographique avec un ami, il est possible de dériver l'arbre chacun de son coté
    et de s'en servir comme clés de chiffrement ou comme points de rendez vous sans autres négociations.

    [[https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki][Hierarchical Deterministic Wallets]] (BIP-32)


** Types de données
     
*** Message isolé
*** Message pointant sur un ou des utilisateurs (émetteurs ou receveurs)
*** Message pointant sur un message



** Vrac

*** Gaussian filter to query the server

    Do not ask the server full addresses
    use a filter or just the start of the string
    and ask fake addresses on top of it


*** Programmed message

    Message we only want to send at a fixed time

